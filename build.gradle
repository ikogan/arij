buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.2'
    }
}

apply plugin: 'android'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

configurations {
    apt
}

dependencies {
    compile "com.google.guava:guava:12.0.1"
    compile "com.squareup.retrofit:retrofit:1.1.1"
    compile "org.ocpsoft.prettytime:prettytime:3.0.2.Final"
    compile "com.googlecode.androidannotations:androidannotations-api:3.0-SNAPSHOT"
    apt "com.googlecode.androidannotations:androidannotations:3.0-SNAPSHOT"
    compile files("libs/analytics-2.jar");
    compile files("libs/android-support-v4.jar");
    compile "com.android.support:appcompat-v7:18.0.+"
}



android {
    compileSdkVersion 17
    buildToolsVersion "18.0.0"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
        }
    }
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 17
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}

def getSourceSetName(variant) {
    return new File(variant.dirName).getName();
}
def getPackageName() {
    return "com.tadamski.arij"
}

/* almost working code below */
android.applicationVariants.each { variant ->
    aptOutput = file("${project.buildDir}/source/r/${variant.dirName}")
    println "****************************"
    println "variant: ${variant.name}"
    println "manifest:  ${variant.processResources.manifestFile}"
    println "aptOutput:  ${aptOutput}"
    println "****************************"
    File a_out = file('src/main/java-annotations')
    if (!a_out.exists()) {
        a_out.mkdir();
    }
    variant.javaCompile.doFirst {
        println "*** compile doFirst ${variant.name}"
        aptOutput.mkdirs()
        variant.javaCompile.options.compilerArgs += [
                '-classpath', configurations.compile.asPath,
                '-processorpath', configurations.apt.asPath,
                '-processor', 'com.googlecode.androidannotations.AndroidAnnotationProcessor',
                '-AandroidManifestFile=' + variant.processResources.manifestFile
                ,'-s', a_out
                ,'-AresourcePackageName=' + getPackageName()
        ]
    }
}